{"description": "A simple, fast, recursive content discovery tool written in Rust\n[![Feroxbuster](https://github.com/epi052/feroxbuster/raw/main/img/logo/default-cropped.png)](https://github.com/epi052/feroxbuster)\n\n## What the heck is a ferox anyway?\n\nFerox is short for Ferric Oxide. Ferric Oxide, simply put, is rust. The name rustbuster was taken, so I decided on a\nvariation. \n\n## What's it do tho?\n\n`feroxbuster` is a tool designed to perform [Forced Browsing](https://owasp.org/www-community/attacks/Forced_browsing).\n\nForced browsing is an attack where the aim is to enumerate and access resources that are not referenced by the web\napplication, but are still accessible by an attacker.\n\n`feroxbuster` uses brute force combined with a wordlist to search for unlinked content in target directories. These\nresources may store sensitive information about web applications and operational systems, such as source code,\ncredentials, internal network addressing, etc...\n\nThis attack is also known as Predictable Resource Location, File Enumeration, Directory Enumeration, and Resource\nEnumeration.\n\n## Quick Start\n\nThis section will cover the minimum amount of information to get up and running with feroxbuster. Please refer the the [documentation](https://epi052.github.io/feroxbuster-docs/docs/), as it's much more comprehensive.\n\n### Installation\n\nThere are quite a few other [installation methods](https://epi052.github.io/feroxbuster-docs/docs/installation/), but these snippets should cover the majority of users. \n\n#### All others Docs\n\nPlease refer the the [documentation](https://epi052.github.io/feroxbuster-docs/docs/).\n\n## Example Usage\n\nHere are a few brief examples to get you started.  Please note, feroxbuster can do a **lot more** than what's listed below.  As a result, there are **many more** examples, with **demonstration gifs** that highlight specific features, in the [documentation](https://epi052.github.io/feroxbuster-docs/docs/).\n\n### Multiple Values\n\nOptions that take multiple values are very flexible. Consider the following ways of specifying extensions:\n\n```\n./feroxbuster -u http://127.1 -x pdf -x js,html -x php txt json,docx\n```\n\nThe command above adds .pdf, .js, .html, .php, .txt, .json, and .docx to each url\n\nAll of the methods above (multiple flags, space separated, comma separated, etc...) are valid and interchangeable. The\nsame goes for urls, headers, status codes, queries, and size filters.", "updated": "2024-03-23T07:03:34Z", "galleryUrl": "https://community.chocolatey.org/packages/feroxbuster/2.8.0", "abuseUrl": "https://community.chocolatey.org/package/ReportAbuse/feroxbuster/2.8.0", "licenseUrl": "https://github.com/epi052/feroxbuster/blob/main/LICENSE", "packageName": "feroxbuster", "displayName": "feroxbuster (Install)", "summary": "A simple, fast, recursive content discovery tool written in Rust", "version": "2.8.0", "icon": "https://rawcdn.githack.com/epi052/feroxbuster/2d381e7e057ce60c580b324dd36c9abaf30c2ec7/img/logo/logo.png", "author": "epi052", "downloadCount": 533, "tags": ["content-discovery", "pentesting-tool", "url-bruteforcer"]}