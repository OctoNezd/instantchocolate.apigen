{"description": "iTans or 'indexed security tokens' are becoming standard to improve access security in \nonline banking and similar applications.\n\niTanMaster installs as a KeePass plugin and provides easy access to the encrypted storage \nof indexed security tokens.\n\niTanMaster supports single or dual token systems (presently Interactive Brokers and Flatex) where the final \ntoken is constructed from two separately indexed and then concatenated token parts.\n\nIn order to enable iTanMaster token selection the following conditions need to be met:\n\n* iTanMaster needs to be loaded (ITanMaster.dll resides in KeePass working directory, \n  matches the KeePass version, KeePass Version > 2.07, ....)\n* [optional * depending on your safety requirements] the website or application primary \n  access key (for the 1st logon step) may be stored and configured according to KeePass \n  window recognition rules. \n  (The iTanWizard will generate an entry with button 'Store access entries' * this entry \n  (if desired) needs to be configured by the user (username/password/window-identification))\n* a special access key titled <ITAN2> MUST be present in the group. \n  This key will be used to identify the respective iTan entry window and then intercept \n  the credentials creation so that iTanMaster can ask the user for a single (entry title = '<ITAN2>'), \n  two (entry title = '<ITAN2>InteractiveBrokers') or three indices (<ITAN2>Flatex) to access the stored / encrypted iTan tokens.\n  (The iTanWizard can generate the <ITAN2> or <ITAN2>(InteractiveBrokers/Flatex) entries with \n  'Store access entries').\n  The entry needs to be configured by the user to support window-identification.\n* iTans and access keys need to be stored in the same KeePass entry key group. \n\nThe iTanWizard currently supports 4 iTan import modes: InteractiveBrokers (IB), Flatex, Card and Sequential.\n\n* IB and Card: This mode is useful in case input data is sequenced in columns and possibly on multiple pages. \n* IB only: the preset is 2 pages, 16 lines and 7 columns. Also (IB), the step 2 database entry (by button 'Store Access Entries') is generated as an <ITAN2>2 for dual token support.\n* Flatex: the preset is 1 page, 11 lines (A..M) and 9 columns (1..9). Also (Flatex), the step 2 database entry (by button 'Store Access Entries') is generated as an <ITAN2>2 for token support.\n* FlatexCH: the preset is 1 page, 10 lines (1..10) and 8 columns (A..H). Also (FlatexCH), the step 2 database entry (by button 'Store Access Entries') is generated as an <ITAN2>2 for token support.\n* Sequential: Parsing wil process the input text line by line, tokens separated by ' ' (space), leading and trailing whitespace is trimmed. \n  \nYou can also opt to import the iTANs marked as 'onetime use' - KeePass and iTanMaster will mark the tokens so that they will be expired if used.\n  \nAs a note: for large amounts of tokens, using a scanner and OCR software had proven quite efficient. Visual verification is recommended though! (SimpleOCR - www.simpleocr.com - worked nicely for me).\n\nI recommended to generate and store the primary and secondary access keys first, using the iTanWizard ('Store Access Entries') and manually configuring the remaining details. This ensures those keys will be positioned on top of the list.", "updated": "2024-03-16T20:03:55Z", "galleryUrl": "https://community.chocolatey.org/packages/keepass-plugin-itanmaster/2.28.0.2", "abuseUrl": "https://community.chocolatey.org/package/ReportAbuse/keepass-plugin-itanmaster/2.28.0.2", "licenseUrl": "https://www.gnu.org/licenses/gpl-2.0.html", "packageName": "keepass-plugin-itanmaster", "displayName": "KeePass Plugin iTanMaster", "summary": "Plugin for KeePass 2.x manage ITan security tokens", "version": "2.28.0.2", "icon": "", "author": "Theo Beisch", "downloadCount": 1169, "tags": ["keepass", "plugin", "security"]}