{"description": "---\n\n### [choco://dokany](choco://dokany)\nTo use choco:// protocol URLs, install [(unofficial) choco:// Protocol support ](https://chocolatey.org/packages/choco-protocol-support)\n\n---\n\n![Screenshot of dokany in use](https://camo.githubusercontent.com/e825c85d44931bd98fe0585a64478bc57f6eb34a/687474703a2f2f646f6b616e2d6465762e6769746875622e696f2f696d616765732f73637265656e636173742e676966)\t\n\n### What is Dokan\n\nWhen you want to create a new file system on Windows, other than FAT or NTFS, you need to develop a file system driver. Developing a device driver that works in kernel mode on windows is extremely technical. By using Dokan, you can create your own file systems very easily without writing device drivers. Dokan is similar to FUSE (Linux file system in user space) but works on Windows. Moreover dokany include a FUSE wrapper that help you to port your FUSE filesystems without changes\n\n### What is Dokany\n\nDokany is a fork of Dokan 0.6.0 with bug fixes, clean change history and updated to build with latest tools.\n\nBecause the original Dokan Legacy (less than v0.6.0) project is no longer maintained.\n\nSince version 0.8.0, dokany break dokan API compatibility. See Choose a version for more informations.\n\nSigned x86 / x64 drivers are provided at each release.\t\n\n### Environment\n\nDokan works on\n\n* Windows 10\n* Windows Server 2012 R2\n* Windows 8.1\n* Windows Server 2012\n* Windows 8\n* Windows Server 2008 R2 SP1\n* Windows 7 SP1\n\t\n### How it works\n\nDokan library contains a user mode DLL (dokan1.dll) and a kernel mode file system driver (dokan1.sys). Once Dokan file system driver is installed, you can create file systems which can be seen as normal file systems in Windows. The application that creates file systems using Dokan library is called File system application.\n\nFile operation requests from user programs (e.g., CreateFile, ReadFile, WriteFile, ...) will be sent to the Windows I/O subsystem (runs in kernel mode) which will subsequently forward the requests to the Dokan file system driver (dokan1.sys). By using functions provided by the Dokan user mode library (dokan1.dll), file system applications are able to register callback functions to the file system driver. The file system driver will invoke these callback routines in order to response to the requests it received. The results of the callback routines will be sent back to the user program.\n\nFor example, when Windows Explorer requests to open a directory, the CreateFile with Direction option request will be sent to Dokan file system driver and the driver will invoke the CreateFile callback provided by the file system application. The results of this routine are sent back to Windows Explorer as the response to the CreateFile request. Therefore, the Dokan file system driver acts as a proxy between user programs and file system applications. The advantage of this approach is that it allows programmers to develop file systems in user mode which is safe and easy to debug.\n\nTo learn more about Dokan file system development, see the API documentation.\t\n\n**[PACKAGE NOTES](https://github.com/bcurran3/ChocolateyPackages/blob/master/dokany/readme.md)**\n\t\n\n---\n\n**Click here to [Patreon-ize](https://www.patreon.com/bcurran3) the package maintainer.**\n\n---", "updated": "2024-03-23T19:03:32Z", "galleryUrl": "https://community.chocolatey.org/packages/dokany/1.3.0.1000", "abuseUrl": "https://community.chocolatey.org/package/ReportAbuse/dokany/1.3.0.1000", "licenseUrl": "https://github.com/dokan-dev/dokany/blob/master/license.mit.txt", "packageName": "dokany", "displayName": "dokany (Install)", "summary": "dokany is a ser mode file system library for windows with FUSE Wrapper", "version": "1.3.0.1000", "icon": "https://dokan-dev.github.io/images/walnut.png", "author": "Adrien J. and Maxime C.", "downloadCount": 37866, "tags": ["dokany", "dokan", "fuse", "filesystem", "binary"]}