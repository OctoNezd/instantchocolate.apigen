{"description": "# Shfmt\n\n## SYNOPSIS\n\n_shfmt_ [flags] [path...]\n\n## DESCRIPTION\n\nshfmt formats shell programs. If the only argument is a dash (_-_) or no\narguments are given, standard input will be used. If a given path is a\ndirectory, all shell scripts found under that directory will be used.\n\nIf any EditorConfig files are found, they will be used to apply formatting\noptions. If any parser or printer flags are given to the tool, no EditorConfig\nfiles will be used. A default like `-i=0` can be used for this purpose.\n\nshfmt's default shell formatting was chosen to be consistent, common, and\npredictable. Some aspects of the format can be configured via printer flags.\n\n## OPTIONS\n\n### Generic flags\n\n`-version` -\nShow version and exit.\n\n`-l` -\nList files whose formatting differs from shfmt's.\n\n`-w` -\nWrite result to file instead of stdout.\n\n`-d` -\nError with a diff when the formatting differs.\n\n```\nThe diff uses color when the output is a terminal.\nTo never use color, set a non-empty *NO_COLOR* or *TERM=dumb*.\nTo always use color, set a non-empty *FORCE_COLOR*.\n```\n\n`-s` -\nSimplify the code.\n\n`-mn` -\nMinify the code to reduce its size (implies `-s`).\n\n### Parser flags\n\n`-ln<str>` -\nLanguage dialect (_bash_/_posix_/_mksh_/_bats_, default _auto_).\n\n```\nWhen set to *auto*, the language is detected from the input filename,\nas long as it has a shell extension like *foo.mksh*. Otherwise, if the input\nbegins with a shell shebang like *#!/bin/sh*, that's used instead.\nIf neither come up with a result, *bash* is used as a fallback.\n\nThe filename extension *.sh* is a special case: it implies *posix*,\nbut may be overriden by a valid shell shebang.\n```\n\n`-p` -\nShorthand for `-ln=posix`.\n\n`-filename` str -\nProvide a name for the standard input file.\n\n### Printer flags\n\n`-i <uint>` -\nIndent: _0_ for tabs (default), _>0_ for number of spaces.\n\n`-bn` -\nBinary ops like _&&_ and _|_ may start a line.\n\n`-ci` -\nSwitch cases will be indented.\n\n`-sr` -\nRedirect operators will be followed by a space.\n\n`-kp` -\nKeep column alignment paddings.\n\n`-fn` -\nFunction opening braces are placed on a separate line.\n\n### Utility flags\n\n`-f`\nRecursively find all shell files and print the paths.\n\n`-tojson`\nPrint syntax tree to stdout as a typed JSON.\n\n## EXAMPLES\n\nFormat all the scripts under the current directory, printing which are modified:\n\n```bash\nshfmt -l -w .\n```\n\nFor CI, one can use a variant where formatting changes are just shown as diffs:\n\n```bash\nshfmt -d .\n```\n\nThe following formatting flags closely resemble Google's shell style defined in\n  <https://google.github.io/styleguide/shell.xml>:\n\n```bash\nshfmt -i 2 -ci -bn\n```\n\nBelow is a sample EditorConfig file as defined by <https://editorconfig.org/>\n,\nshowing how to set any option:\n\n```bash\n[*.sh]\n# like -i=4\nindent_style = space\nindent_size = 4\n\nshell_variant      = posix # like -ln=posix\nbinary_next_line   = true  # like -bn\nswitch_case_indent = true  # like -ci\nspace_redirects    = true  # like -sr\nkeep_padding       = true  # like -kp\nfunction_next_line = true  # like -fn\n\n# Ignore the entire \"third_party\" directory.\n[third_party/**]\nignore = true\n```\n\nshfmt can also replace _bash -n_ to check shell scripts for syntax errors. It is\nmore exhaustive, as it parses all syntax statically and requires valid UTF-8:\n\n```bash\n$ echo '${foo:1 2}' | bash -n\n$ echo '${foo:1 2}' | shfmt >/dev/null\n1:9: not a valid arithmetic operator: 2\n$ echo 'foo=(1 2)' | bash --posix -n\n$ echo 'foo=(1 2)' | shfmt -p >/dev/null\n1:5: arrays are a bash feature\n```", "updated": "2024-03-23T20:33:47Z", "galleryUrl": "https://community.chocolatey.org/packages/shfmt/3.8.0", "abuseUrl": "https://community.chocolatey.org/package/ReportAbuse/shfmt/3.8.0", "licenseUrl": "https://github.com/mvdan/sh/blob/master/LICENSE", "packageName": "shfmt", "displayName": "Shfmt", "summary": "A shell parser, formatter, and interpreter with bash support", "version": "3.8.0", "icon": "", "author": "mvdan", "downloadCount": 2135, "tags": ["sh", "bash", "formatter", "go"]}