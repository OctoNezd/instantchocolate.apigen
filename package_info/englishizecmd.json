{"description": "There often comes a need to use built-in command-line tools in English in non-English Windows, as they are localized to another language which can be difficult for admins who only speak English. 'Englishize Cmd' employs a different technique to 'englishize' CLI tools with a click.\n\n## List of Features\n\n1. Toggles between English and non-English for many Windows commands\n2. For English system admins who manages Windows PCs of other languages\n3. No need to log off; settings are applied immediately\n4. Comes with a restorer. Apply or restore is as simple as a click\n5. Better character compatibility than changing DOS codepage\n6. Many languages and executables are supported. Customizable\n7. Ensure the outputs which your scripts catch are always in English\n8. Administrator rights are required. It asks for rights to elevates itself. (Does not elevate over network mapped drives)\n9. Parameter `/quiet` can be used to suppress confirmation messages for unattended usage. (Only works when existing Command Prompt is run elevated)\n10. Supports Windows Vista and later, as well as their server versions only, including Windows 10 or Windows Server 2019\n11. Portable by default. Optional installer enables `EnglishizeCmd` and `RestoreCmd` commands globally in Command Prompt and Run Prompt. (The commands including the extensions would be `EnglishizeCmd.bat` and `RestoreCmd.bat`)\n\n### Getting Started\n\n\"Englishize Cmd\" comes with 4 files:\n\n1. `EnglishizeCmd.bat` for changing command line tools from non-English to English.\n2. `RestoreCmd.bat` to restore everything back to original language, including original permissions and ownerships.\n3. `_lang_codes.txt` is a modifiable list containing all non-English language codes. It includes most languages but in case your language is not there, add it and \"Englishize Cmd\" will support it.\n4. `_files_to_process.txt` is a modifiable list of file names of command-line executables that will be affected in the change. All commands in Windows Vista, 7 and 8.1 should be covered (although it contains much more commands than there actually are, it doesn't matter because it has no effect on commands that don't exist.) If you decide some commands are better left localized rather than being changed to English, remove them from this list before running \"EnglishizeCmd.bat\". Also, although the list covers command-line executables, you can add GUI \u2013 Graphical User Interface - programs such as Paint - mspaint.exe and lots of others to \"_files_to_process.txt\". There is a limitation here though. Windows comes with both English and non-English .mui files for command-line programs only; by default .mui for GUI programs don't exist in en-US folder until users install the English MUI through Windows Update) or some third-party tool (for non-Ultimate/Enterprise Windows users).\n\n**Note**:  The above files would be located in `%ProgramFiles(x86)%\\wandersick\\EnglishizeCmd` (for an all-user setup)", "updated": "2024-03-23T22:48:33Z", "galleryUrl": "https://community.chocolatey.org/packages/englishizecmd/2.0.0.0", "abuseUrl": "https://community.chocolatey.org/package/ReportAbuse/englishizecmd/2.0.0.0", "licenseUrl": "https://raw.github.com/wandersick/englishize-cmd/master/LICENSE", "packageName": "englishizecmd", "displayName": "EnglishizeCmd", "summary": "Change non-English command-line interface to English fast", "version": "2.0.0.0", "icon": "https://cdn.statically.io/gh/wandersick/englishize-cmd/master/Data/EnglishizeCmd-icon.png", "author": "wandersick", "downloadCount": 537, "tags": ["Multilingual", "MUI", "Localization", "Localisation", "Englishise", "English", "Language", "Windows", "Batch", "Script", "Command", "CLI"]}