{"description": "[![build badge](https://github.com/lmammino/jwtinfo/workflows/Rust/badge.svg)](https://github.com/lmammino/jwtinfo/actions?query=workflow%3ARust)\n[![codecov](https://codecov.io/gh/lmammino/jwtinfo/branch/master/graph/badge.svg)](https://codecov.io/gh/lmammino/jwtinfo)\n[![crates.io badge](https://img.shields.io/crates/v/jwtinfo.svg)](https://crates.io/crates/jwtinfo)\n[![Documentation](https://docs.rs/jwtinfo/badge.svg)](https://docs.rs/jwtinfo)\n[![rustc badge](https://img.shields.io/badge/rustc-1.40+-lightgray.svg)](https://blog.rust-lang.org/2019/12/19/Rust-1.40.0.html)\n[![Clippy Linting Result](https://img.shields.io/badge/clippy-<3-yellowgreen)](https://github.com/rust-lang/rust-clippy)\n[![License: MIT OR Apache-2.0](https://img.shields.io/crates/l/jwtinfo.svg)](#license)\n[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/lmammino/jwtinfo) \n\n\nA command line tool to get information about [JWTs](https://tools.ietf.org/html/rfc7519) (Json Web Tokens).\n\n## Usage\n\n`jwtinfo` is a command line interface that allows you to inspect a given JWT. The tool currently allows to see the body of the token in JSON format. It accepts a single command line argument which should be a valid JWT.\n\nHere's an example:\n\n```bash\njwtinfo eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n```\n\nWhich will print:\n\n```json\n{\"sub\":\"1234567890\",\"name\":\"John Doe\",\"iat\":1516239022}\n```\n\nIf you want to visualize the token header (rather than the body), you can do that by passing the `--header` flag:\n\n```bash\njwtinfo --header eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n```\n\nWhich will print:\n\n```json\n{\"alg\":\"HS256\",\"typ\":\"JWT\"}\n```\n\nYou can combine the tool with other command line utilities, for instance [`jq`](https://stedolan.github.io/jq/):\n\n```bash\njwtinfo eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c | jq .\n```\n\n## Credits\n\nA special thank you goes to the [Rust Reddit community](https://www.reddit.com/r/rust/) for providing a lot of useful suggestions on how to improve this project. A special thanks goes to: [mardiros](https://www.reddit.com/user/mardiros/), [matthieum](https://www.reddit.com/user/matthieum/), [steveklabnik1](https://www.reddit.com/user/steveklabnik1/), [ESBDB](https://www.reddit.com/user/ESBDB/), [Dushistov](https://www.reddit.com/user/Dushistov/), [Doddzilla7](https://www.reddit.com/user/Doddzilla7/). Another huge thank you goes to the [Rust stackoverflow community](https://chat.stackoverflow.com/rooms/62927/rust), especially to [Denys S\u00e9guret](https://chat.stackoverflow.com/users/263525).\n\nBig thanks also go to [Tim McNamara](https://twitter.com/timClicks) for conducting a [live code review](https://loige.co/learning-rust-through-open-source-and-live-code-reviews) of this codebase.\n\n\n## Contributing\n\nEveryone is very welcome to contribute to this project.\nYou can contribute just by submitting bugs or suggesting improvements by\n[opening an issue on GitHub](https://github.com/lmammino/jwtinfo/issues).", "updated": "2024-03-12T13:03:23Z", "galleryUrl": "https://community.chocolatey.org/packages/jwtinfo/0.4.3", "abuseUrl": "https://community.chocolatey.org/package/ReportAbuse/jwtinfo/0.4.3", "licenseUrl": "https://github.com/lmammino/jwtinfo/blob/v0.4.3/LICENSE", "packageName": "jwtinfo", "displayName": "JWT Info", "summary": "A command-line tool to get information about JWTs (Json Web Tokens).", "version": "0.4.3", "icon": "", "author": "Luciano Mammino\nTim McNamara\nStefano Abalsamo\nStjepan Golemac", "downloadCount": 669, "tags": ["foss", "utility", "cli", "jwt", "helper", "inspector", "token", "info", "json-web-tokens"]}